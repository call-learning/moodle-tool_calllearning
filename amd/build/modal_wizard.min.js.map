{"version":3,"file":"modal_wizard.min.js","sources":["../src/modal_wizard.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * General modal wizard.\n *\n * @module     tool_calllearning/modal_wizard\n * @copyright  2025 Laurent David <laurent@call-learning.fr>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Modal from 'core/modal';\nimport Notification from 'core/notification';\nimport * as CustomEvents from 'core/custom_interaction_events';\nimport $ from 'jquery';\n\n/**\n * ModalWizard class\n */\nexport default class ModalWizard extends Modal {\n    static TYPE = 'WIZARD';\n    static TEMPLATE = 'tool_calllearning/modal_wizard';\n    static EVENTS = {\n        next: 'modal-wizard:next',\n        previous: 'modal-wizard:previous',\n    };\n    /**\n     * Constructor\n     *\n     * Shows the required form inside a modal dialogue\n     *\n     * @param {HTMLElement} root The root element of the modal.\n     */\n    constructor(root) {\n        super(root);\n        this.removeOnClose = true; // Default to removing the modal on close.\n        if (!this.getFooter().find(this.getActionSelector('cancel')).length) {\n            Notification.exception({message: 'No cancel button found'});\n        }\n    }\n\n    /**\n     * Register all event listeners.\n     */\n    registerEventListeners() {\n        // Call the parent registration.\n        super.registerEventListeners();\n\n        // Register to close on save/cancel.\n        this.registerCloseOnSave();\n        this.registerCloseOnCancel();\n        this.registerCloseOnNext();\n        this.registerCloseOnPrevious();\n    }\n\n    /**\n     * Register a listener to close the dialogue when the save button is pressed.\n     *\n     * @method registerCloseOnNext\n     */\n    registerCloseOnNext() {\n        // Handle the clicking of the Cancel button.\n        this.getModal().on(CustomEvents.events.activate, this.getActionSelector('next'), (e, data) => {\n            const nextEvent = $.Event(ModalWizard.EVENTS.next);\n            this.getRoot().trigger(nextEvent, this);\n\n            if (!nextEvent.isDefaultPrevented()) {\n                data.originalEvent.preventDefault();\n\n                if (this.removeOnClose) {\n                    this.destroy();\n                } else {\n                    this.hide();\n                }\n            }\n        });\n    }\n\n    /**\n     * Register a listener to close the dialogue when the save button is pressed.\n     *\n     * @method registerCloseOnPrevious\n     */\n    registerCloseOnPrevious() {\n        // Handle the clicking of the Cancel button.\n        this.getModal().on(CustomEvents.events.activate, this.getActionSelector('previous'), (e, data) => {\n            const previousEvent = $.Event(ModalWizard.EVENTS.previous);\n            this.getRoot().trigger(previousEvent, this);\n\n            if (!previousEvent.isDefaultPrevented()) {\n                data.originalEvent.preventDefault();\n\n                if (this.removeOnClose) {\n                    this.destroy();\n                } else {\n                    this.hide();\n                }\n            }\n        });\n    }\n\n}\n\nModalWizard.registerModalType();\n"],"names":["ModalWizard","Modal","constructor","root","removeOnClose","this","getFooter","find","getActionSelector","length","exception","message","registerEventListeners","registerCloseOnSave","registerCloseOnCancel","registerCloseOnNext","registerCloseOnPrevious","getModal","on","CustomEvents","events","activate","e","data","nextEvent","$","Event","EVENTS","next","getRoot","trigger","isDefaultPrevented","originalEvent","preventDefault","destroy","hide","previousEvent","previous","registerModalType"],"mappings":"skDA+BqBA,oBAAoBC,eAcrCC,YAAYC,YACFA,WACDC,eAAgB,EAChBC,KAAKC,YAAYC,KAAKF,KAAKG,kBAAkB,WAAWC,8BAC5CC,UAAU,CAACC,QAAS,2BAOzCC,+BAEUA,8BAGDC,2BACAC,6BACAC,2BACAC,0BAQTD,2BAESE,WAAWC,GAAGC,aAAaC,OAAOC,SAAUhB,KAAKG,kBAAkB,SAAS,CAACc,EAAGC,cAC3EC,UAAYC,gBAAEC,MAAM1B,YAAY2B,OAAOC,WACxCC,UAAUC,QAAQN,UAAWnB,MAE7BmB,UAAUO,uBACXR,KAAKS,cAAcC,iBAEf5B,KAAKD,mBACA8B,eAEAC,WAWrBnB,+BAESC,WAAWC,GAAGC,aAAaC,OAAOC,SAAUhB,KAAKG,kBAAkB,aAAa,CAACc,EAAGC,cAC/Ea,cAAgBX,gBAAEC,MAAM1B,YAAY2B,OAAOU,eAC5CR,UAAUC,QAAQM,cAAe/B,MAEjC+B,cAAcL,uBACfR,KAAKS,cAAcC,iBAEf5B,KAAKD,mBACA8B,eAEAC,gEA5EJnC,mBACH,0BADGA,uBAEC,kDAFDA,qBAGD,CACZ4B,KAAM,oBACNS,SAAU,0BA+ElBrC,YAAYsC"}